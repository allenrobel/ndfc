##############################################
##            REQUIRED VARS                 ##
##############################################
# fabric_1
#
# - A VXLAN_EVPN fabric
#
# switch_1
#
# - A vrf-capable switch
# - Does not require an interface
#
# switch_2
#
# - A vrf-capable switch
# - Does not require an interface
#
##############################################

##############################################
##                 SETUP                    ##
##############################################

- set_fact:
    rest_path: "/rest/control/fabrics/{{ fabric_1 }}"
  when: controller_version == "11"

- set_fact:
    rest_path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ fabric_1 }}"
  when: controller_version >= "12"

- name: MERGED_ALL - Verify if fabric is deployed.
  cisco.dcnm.dcnm_rest:
    method: GET
    path: "{{ rest_path }}"
  register: result

- assert:
    that:
    - 'result.response.DATA != None'

- name: MERGED_ALL - Clean up any existing vrfs
  cisco.ndfc.ndfc_vrf:
    fabric: "{{ fabric_1 }}"
    state: deleted

###############################################
###                MERGED                    ##
###############################################

- name: MERGED_ALL - Create, Attach and Deploy new VRF with all values
  cisco.ndfc.ndfc_vrf: &conf
    fabric: "{{ fabric_1 }}"
    state: merged
    config:
    - vrf_name: ansible-vrf-int1
      vrf_id: 9008011
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 500
      source: null
      service_vrf_template: null
      vrf_vlan_name: "test"
      vrf_intf_desc: "test vrf interface"
      vrf_description: "test vrf"
      vrf_int_mtu: 2100
      loopback_route_tag: 54321
      max_bgp_paths: 6
      max_ibgp_paths: 7
      ipv6_linklocal_enable: false
      adv_host_routes: true
      adv_default_routes: false
      static_default_route: false
      bgp_password: "74657374"
      bgp_passwd_encrypt: 7
      attach:
      - ip_address: "{{ switch_1 }}"
      - ip_address: "{{ switch_2 }}"
      deploy: true
  register: result

- name: Query fabric state until vrfStatus transitions to DEPLOYED state
  cisco.ndfc.ndfc_vrf:
    fabric: "{{ fabric_1 }}"
    state: query
  register: query_result
  until:
    - "query_result.response[0].parent.vrfStatus is search('DEPLOYED')"
  retries: 30
  delay: 2

- assert:
    that:
    - 'result.changed == true'
    - 'result.response[0].RETURN_CODE == 200'
    - 'result.response[1].RETURN_CODE == 200'
    - 'result.response[2].RETURN_CODE == 200'
    - '(result.response[1].DATA|dict2items)[0].value == "SUCCESS"'
    - '(result.response[1].DATA|dict2items)[1].value == "SUCCESS"'

- name: MERGED_ALL - conf - Idempotence
  cisco.ndfc.ndfc_vrf: *conf
  register: result

- assert:
    that:
    - 'result.changed == false'
    - 'result.response|length == 0'

###############################################
###                 CLEAN-UP                 ##
###############################################

- name: MERGED_ALL - Clean up any existing vrfs
  cisco.ndfc.ndfc_vrf:
    fabric: "{{ fabric_1 }}"
    state: deleted
