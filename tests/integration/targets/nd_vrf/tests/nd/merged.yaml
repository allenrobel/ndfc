##############################################
##            REQUIRED VARS                 ##
##############################################
# fabric_1
# A VXLAN_EVPN fabric
#
# No switches are required
#
##############################################

##############################################
##                 SETUP                    ##
##############################################

- name: SETUP.0 - MERGED - [with_items] print vars
  ansible.builtin.debug:
    var: item
  with_items:
     - "fabric_1 : {{ fabric_1 }}"

- name: SETUP.1 - MERGED - [dcnm_rest.GET] Verify fabric is deployed.
  cisco.dcnm.dcnm_rest:
    method: GET
    path: "/appcenter/cisco/ndfc/api/v1/lan-fabric/rest/control/fabrics/{{ fabric_1 }}"
  register: result

- assert:
    that:
    - result.response.DATA != None

- name: SETUP.2 - MERGED - [deleted] Delete all VRFs
  cisco.nd.nd_vrf:
    fabric: "{{ fabric_1 }}"
    state: deleted
  register: result_setup_2


###############################################
###                MERGED                    ##
###############################################
- name: Set fact
  ansible.builtin.set_fact:
    DEPLOYMENT_OF_VRFS: "Deployment of VRF(s) has been initiated successfully"

- name: Set task name
  ansible.builtin.set_fact:
    task_name: "TEST.1 - MERGED - [merged] Create VRF vrf1 with VLAN 600"

- name: Log task
  cisco.nd.nd_log:
    msg: "{{ task_name }}"

- name: "{{ task_name }}"
  register: result_1
  cisco.nd.nd_vrf: &conf1
    state: merged
    config:
    - fabric: "{{ fabric_1 }}"
      vrf_name: vrf1
      vrf_id: 9008011
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 600

- name: Set task name
  ansible.builtin.set_fact:
    task_name: "TEST.1a - MERGED - [query] Wait for vrfStatus == NA"

- name: Log task
  cisco.nd.nd_log:
    msg: "{{ task_name }}"

- name: "{{ task_name }}"
  cisco.nd.nd_vrf:
    fabric: "{{ fabric_1 }}"
    state: query
  register: result_1a
  until:
    - "result_1a.response[0].DATA.vrfStatus is search('NA')"
  retries: 30
  delay: 2

- name: TEST.1b - MERGED - [debug] print result_1
  ansible.builtin.debug:
    var: result_1

- assert:
    that:
    - result_1.changed == true
    - result_1.diff[0].vrf_name == "vrf1"
    - result_1.response[0].METHOD == "POST"
    - result_1.response[0].RETURN_CODE == 200

- name: Set task name
  ansible.builtin.set_fact:
    task_name: "TEST.1c - MERGED - [merged] conf1 - Idempotence"

- name: Log task
  cisco.nd.nd_log:
    msg: "{{ task_name }}"

- name: "{{ task_name }}"
  cisco.nd.nd_vrf: *conf1
  register: result_1c

- name: TEST.1d - MERGED - [debug] print result_1c
  ansible.builtin.debug:
    var: result_1c

- assert:
    that:
    - result_1c.changed == false
    - result_1c.response|length == 0

- name: Set task name
  ansible.builtin.set_fact:
    task_name: "TEST.1e - MERGED - [deleted] Delete all VRFs"

- name: Log task
  cisco.nd.nd_log:
    msg: "{{ task_name }}"

- name: "{{ task_name }}"
  cisco.nd.nd_vrf:
    fabric: "{{ fabric_1 }}"
    state: deleted
  register: result_1e


- name: Set task name
  ansible.builtin.set_fact:
    task_name: "TEST.2 - MERGED - [merged] Create VRF with controller provided VLAN"

- name: Log task
  cisco.nd.nd_log:
    msg: "{{ task_name }}"

- name: "{{ task_name }}"
  cisco.nd.nd_vrf: &conf2
    fabric: "{{ fabric_1 }}"
    state: merged
    config:
    - vrf_name: vrf1
      vrf_id: 9008011
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
  register: result_2

- name: Set task name
  ansible.builtin.set_fact:
    task_name: "TEST.2a - MERGED - [query] Wait for vrfStatus == NA"

- name: Log task
  cisco.nd.nd_log:
    msg: "{{ task_name }}"

- name: "{{ task_name }}"
  cisco.nd.nd_vrf:
    fabric: "{{ fabric_1 }}"
    state: query
  register: result_2a
  until:
    - "result_2a.response[0].DATA.vrfStatus is search('NA')"
  retries: 30
  delay: 2

- name: TEST.2b - MERGED - [debug] print result_2
  ansible.builtin.debug:
    var: result_2

- assert:
    that:
    - result_2.changed == true
    - result_2.diff[0].vrf_name == "vrf1"
    - result_2.response[0].RETURN_CODE == 200

- name: Set task name
  ansible.builtin.set_fact:
    task_name: "TEST.2c - MERGED - [merged] conf2 - Idempotence"

- name: Log task
  cisco.nd.nd_log:
    msg: "{{ task_name }}"

- name: "{{ task_name }}"
  cisco.nd.nd_vrf: *conf2
  register: result_2c

- name: TEST.2d - MERGED - [debug] print result_2c
  ansible.builtin.debug:
    var: result_2c

- assert:
    that:
    - result_2c.changed == false
    - result_2c.response|length == 0

- name: Set task name
  ansible.builtin.set_fact:
    task_name: "TEST.2e - MERGED - [deleted] Delete all VRFs"

- name: Log task
  cisco.nd.nd_log:
    msg: "{{ task_name }}"

- name: "{{ task_name }}"
  cisco.nd.nd_vrf:
    fabric: "{{ fabric_1 }}"
    state: deleted


- name: Set task name
  ansible.builtin.set_fact:
    task_name: "TEST.3 - MERGED - [merged] Create VRF with user provided VLAN"

- name: Log task
  cisco.nd.nd_log:
    msg: "{{ task_name }}"

- name: "{{ task_name }}"
  cisco.nd.nd_vrf: &conf3
    fabric: "{{ fabric_1 }}"
    state: merged
    config:
    - vrf_name: vrf1
      vrf_id: 9008011
      vrf_template: Default_VRF_Universal
      vrf_extension_template: Default_VRF_Extension_Universal
      vlan_id: 500
  register: result_3

- name: Set task name
  ansible.builtin.set_fact:
    task_name: "TEST.3a - MERGED - [query] Wait for vrfStatus == NA"

- name: Log task
  cisco.nd.nd_log:
    msg: "{{ task_name }}"

- name: "{{ task_name }}"
  cisco.nd.nd_vrf:
    fabric: "{{ fabric_1 }}"
    state: query
  register: result_3a
  until:
    - "result_3a.response[0].DATA.vrfStatus is search('NA')"
  retries: 30
  delay: 2

- name: TEST.3b - MERGED - [debug] print result_3
  ansible.builtin.debug:
    var: result_3

- assert:
    that:
    - result_3.changed == true
    - result_3.diff[0].vrf_name == "vrf1"
    - result_3.response[0].METHOD == "POST"
    - result_3.response[0].RETURN_CODE == 200

- name: Set task name
  ansible.builtin.set_fact:
    task_name: "TEST.3c - MERGED - [merged] conf3 - Idempotence"

- name: Log task
  cisco.nd.nd_log:
    msg: "{{ task_name }}"

- name: "{{ task_name }}"
  cisco.nd.nd_vrf: *conf3
  register: result_3c

- name: TEST.3d - MERGED - [debug] print result_3c
  ansible.builtin.debug:
    var: result_3c

- assert:
    that:
    - result_3c.changed == false
    - result_3c.response|length == 0

- name: Set task name
  ansible.builtin.set_fact:
    task_name: "TEST.3e - MERGED - [deleted] Delete all VRFs"

- name: Log task
  cisco.nd.nd_log:
    msg: "{{ task_name }}"

- name: "{{ task_name }}"
  cisco.nd.nd_vrf:
    fabric: "{{ fabric_1 }}"
    state: deleted



- name: Set task name
  ansible.builtin.set_fact:
    task_name: "TEST.4 - MERGED - [merged] Create VRF - Update with incorrect VRF ID."

- name: Log task
  cisco.nd.nd_log:
    msg: "{{ task_name }}"

- name: "{{ task_name }}"
  cisco.nd.nd_vrf:
    fabric: "{{ fabric_1 }}"
    state: merged
    config:
      - vrf_name: vrf1
        vrf_id: 9008012
        vrf_template: Default_VRF_Universal
        vrf_extension_template: Default_VRF_Extension_Universal
  register: result_4
  ignore_errors: yes

- name: TEST.4a - MERGED - [debug] print result_4
  ansible.builtin.debug:
    var: result_4

- name: set fact
  set_fact:
    TEST_PHRASE: "cannot be updated to a different value"

- assert:
    that:
    - result_4.changed == false
    - TEST_PHRASE in result_4.msg

- name: Set task name
  ansible.builtin.set_fact:
    task_name: "TEST.5 - MERGED - [merged] Create VRF - Update with Out of Range vrf_id."

- name: Log task
  cisco.nd.nd_log:
    msg: "{{ task_name }}"

- name: "{{ task_name }}"
  cisco.nd.nd_vrf:
    fabric: "{{ fabric_1 }}"
    state: merged
    config:
      - vrf_name: vrf1
        vrf_id: 9008012000000000
        vrf_template: Default_VRF_Universal
        vrf_extension_template: Default_VRF_Extension_Universal
  register: result_5
  ignore_errors: yes

- name: TEST.5a - MERGED - [debug] print result_5
  ansible.builtin.debug:
    var: result_5

- name: set fact
  set_fact:
    TEST_PARAM: "vrf_id"
    TEST_PHRASE: "Input should be less than or equal to 16777214"

- assert:
    that:
    - result_5.changed == false
    - TEST_PARAM in result_5.module_stderr
    - TEST_PHRASE in result_5.module_stderr


###############################################
###                 CLEAN-UP                 ##
###############################################

- name: Set task name
  ansible.builtin.set_fact:
    task_name: "CLEANUP.1 - MERGED - [deleted] Delete all VRFs"

- name: Log task
  cisco.nd.nd_log:
    msg: "{{ task_name }}"


- name: "{{ task_name }}"
  cisco.nd.nd_vrf:
    fabric: "{{ fabric_1 }}"
    state: deleted

